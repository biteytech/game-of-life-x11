// Generated by jextract

package tech.bitey.golpanama.xlib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$73 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$73() {}
    static final FunctionDescriptor XFreeEventData$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle XFreeEventData$MH = RuntimeHelper.downcallHandle(
        "XFreeEventData",
        constants$73.XFreeEventData$FUNC
    );
    static final FunctionDescriptor XAllocClassHint$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle XAllocClassHint$MH = RuntimeHelper.downcallHandle(
        "XAllocClassHint",
        constants$73.XAllocClassHint$FUNC
    );
    static final FunctionDescriptor XAllocIconSize$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle XAllocIconSize$MH = RuntimeHelper.downcallHandle(
        "XAllocIconSize",
        constants$73.XAllocIconSize$FUNC
    );
    static final FunctionDescriptor XAllocSizeHints$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle XAllocSizeHints$MH = RuntimeHelper.downcallHandle(
        "XAllocSizeHints",
        constants$73.XAllocSizeHints$FUNC
    );
    static final FunctionDescriptor XAllocStandardColormap$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle XAllocStandardColormap$MH = RuntimeHelper.downcallHandle(
        "XAllocStandardColormap",
        constants$73.XAllocStandardColormap$FUNC
    );
    static final FunctionDescriptor XAllocWMHints$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle XAllocWMHints$MH = RuntimeHelper.downcallHandle(
        "XAllocWMHints",
        constants$73.XAllocWMHints$FUNC
    );
}


