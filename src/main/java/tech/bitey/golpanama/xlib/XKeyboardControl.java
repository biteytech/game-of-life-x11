// Generated by jextract

package tech.bitey.golpanama.xlib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     int key_click_percent;
 *     int bell_percent;
 *     int bell_pitch;
 *     int bell_duration;
 *     int led;
 *     int led_mode;
 *     int key;
 *     int auto_repeat_mode;
 * };
 * }
 */
public class XKeyboardControl {

    public static MemoryLayout $LAYOUT() {
        return constants$44.const$3;
    }
    public static VarHandle key_click_percent$VH() {
        return constants$44.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int key_click_percent;
     * }
     */
    public static int key_click_percent$get(MemorySegment seg) {
        return (int)constants$44.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int key_click_percent;
     * }
     */
    public static void key_click_percent$set(MemorySegment seg, int x) {
        constants$44.const$4.set(seg, x);
    }
    public static int key_click_percent$get(MemorySegment seg, long index) {
        return (int)constants$44.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void key_click_percent$set(MemorySegment seg, long index, int x) {
        constants$44.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bell_percent$VH() {
        return constants$44.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int bell_percent;
     * }
     */
    public static int bell_percent$get(MemorySegment seg) {
        return (int)constants$44.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int bell_percent;
     * }
     */
    public static void bell_percent$set(MemorySegment seg, int x) {
        constants$44.const$5.set(seg, x);
    }
    public static int bell_percent$get(MemorySegment seg, long index) {
        return (int)constants$44.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void bell_percent$set(MemorySegment seg, long index, int x) {
        constants$44.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bell_pitch$VH() {
        return constants$45.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int bell_pitch;
     * }
     */
    public static int bell_pitch$get(MemorySegment seg) {
        return (int)constants$45.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int bell_pitch;
     * }
     */
    public static void bell_pitch$set(MemorySegment seg, int x) {
        constants$45.const$0.set(seg, x);
    }
    public static int bell_pitch$get(MemorySegment seg, long index) {
        return (int)constants$45.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void bell_pitch$set(MemorySegment seg, long index, int x) {
        constants$45.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bell_duration$VH() {
        return constants$45.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int bell_duration;
     * }
     */
    public static int bell_duration$get(MemorySegment seg) {
        return (int)constants$45.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int bell_duration;
     * }
     */
    public static void bell_duration$set(MemorySegment seg, int x) {
        constants$45.const$1.set(seg, x);
    }
    public static int bell_duration$get(MemorySegment seg, long index) {
        return (int)constants$45.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void bell_duration$set(MemorySegment seg, long index, int x) {
        constants$45.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle led$VH() {
        return constants$45.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int led;
     * }
     */
    public static int led$get(MemorySegment seg) {
        return (int)constants$45.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int led;
     * }
     */
    public static void led$set(MemorySegment seg, int x) {
        constants$45.const$2.set(seg, x);
    }
    public static int led$get(MemorySegment seg, long index) {
        return (int)constants$45.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void led$set(MemorySegment seg, long index, int x) {
        constants$45.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle led_mode$VH() {
        return constants$45.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int led_mode;
     * }
     */
    public static int led_mode$get(MemorySegment seg) {
        return (int)constants$45.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int led_mode;
     * }
     */
    public static void led_mode$set(MemorySegment seg, int x) {
        constants$45.const$3.set(seg, x);
    }
    public static int led_mode$get(MemorySegment seg, long index) {
        return (int)constants$45.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void led_mode$set(MemorySegment seg, long index, int x) {
        constants$45.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle key$VH() {
        return constants$45.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int key;
     * }
     */
    public static int key$get(MemorySegment seg) {
        return (int)constants$45.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int key;
     * }
     */
    public static void key$set(MemorySegment seg, int x) {
        constants$45.const$4.set(seg, x);
    }
    public static int key$get(MemorySegment seg, long index) {
        return (int)constants$45.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void key$set(MemorySegment seg, long index, int x) {
        constants$45.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle auto_repeat_mode$VH() {
        return constants$45.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int auto_repeat_mode;
     * }
     */
    public static int auto_repeat_mode$get(MemorySegment seg) {
        return (int)constants$45.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int auto_repeat_mode;
     * }
     */
    public static void auto_repeat_mode$set(MemorySegment seg, int x) {
        constants$45.const$5.set(seg, x);
    }
    public static int auto_repeat_mode$get(MemorySegment seg, long index) {
        return (int)constants$45.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void auto_repeat_mode$set(MemorySegment seg, long index, int x) {
        constants$45.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


