// Generated by jextract

package tech.bitey.golpanama.xlib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     XPointer client_data;
 *     XIMProc callback;
 * };
 * }
 */
public class XIMCallback {

    public static MemoryLayout $LAYOUT() {
        return constants$114.const$4;
    }
    public static VarHandle client_data$VH() {
        return constants$114.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * XPointer client_data;
     * }
     */
    public static MemorySegment client_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$114.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * XPointer client_data;
     * }
     */
    public static void client_data$set(MemorySegment seg, MemorySegment x) {
        constants$114.const$5.set(seg, x);
    }
    public static MemorySegment client_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$114.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void client_data$set(MemorySegment seg, long index, MemorySegment x) {
        constants$114.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle callback$VH() {
        return constants$115.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * XIMProc callback;
     * }
     */
    public static MemorySegment callback$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$115.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * XIMProc callback;
     * }
     */
    public static void callback$set(MemorySegment seg, MemorySegment x) {
        constants$115.const$0.set(seg, x);
    }
    public static MemorySegment callback$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$115.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void callback$set(MemorySegment seg, long index, MemorySegment x) {
        constants$115.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static XIMProc callback(MemorySegment segment, Arena scope) {
        return XIMProc.ofAddress(callback$get(segment), scope);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


