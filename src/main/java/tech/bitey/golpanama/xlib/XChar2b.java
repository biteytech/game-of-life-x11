// Generated by jextract

package tech.bitey.golpanama.xlib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     unsigned char byte1;
 *     unsigned char byte2;
 * };
 * }
 */
public class XChar2b {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_CHAR$LAYOUT.withName("byte1"),
        Constants$root.C_CHAR$LAYOUT.withName("byte2")
    );
    public static MemoryLayout $LAYOUT() {
        return XChar2b.$struct$LAYOUT;
    }
    static final VarHandle byte1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("byte1"));
    public static VarHandle byte1$VH() {
        return XChar2b.byte1$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char byte1;
     * }
     */
    public static byte byte1$get(MemorySegment seg) {
        return (byte)XChar2b.byte1$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char byte1;
     * }
     */
    public static void byte1$set(MemorySegment seg, byte x) {
        XChar2b.byte1$VH.set(seg, x);
    }
    public static byte byte1$get(MemorySegment seg, long index) {
        return (byte)XChar2b.byte1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void byte1$set(MemorySegment seg, long index, byte x) {
        XChar2b.byte1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle byte2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("byte2"));
    public static VarHandle byte2$VH() {
        return XChar2b.byte2$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char byte2;
     * }
     */
    public static byte byte2$get(MemorySegment seg) {
        return (byte)XChar2b.byte2$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char byte2;
     * }
     */
    public static void byte2$set(MemorySegment seg, byte x) {
        XChar2b.byte2$VH.set(seg, x);
    }
    public static byte byte2$get(MemorySegment seg, long index) {
        return (byte)XChar2b.byte2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void byte2$set(MemorySegment seg, long index, byte x) {
        XChar2b.byte2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


