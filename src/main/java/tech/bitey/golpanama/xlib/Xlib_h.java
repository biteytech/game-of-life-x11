// Generated by jextract

package tech.bitey.golpanama.xlib;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class Xlib_h extends Xlib_h_1 {

    Xlib_h() {
        // Should not be called directly
    }
    private static final long CWWinGravity = 32L;
    /**
     * {@snippet lang=c :
     * #define CWWinGravity 32
     * }
     */
    public static long CWWinGravity() {
        return CWWinGravity;
    }
    private static final long CWBackingStore = 64L;
    /**
     * {@snippet lang=c :
     * #define CWBackingStore 64
     * }
     */
    public static long CWBackingStore() {
        return CWBackingStore;
    }
    private static final long CWBackingPlanes = 128L;
    /**
     * {@snippet lang=c :
     * #define CWBackingPlanes 128
     * }
     */
    public static long CWBackingPlanes() {
        return CWBackingPlanes;
    }
    private static final long CWBackingPixel = 256L;
    /**
     * {@snippet lang=c :
     * #define CWBackingPixel 256
     * }
     */
    public static long CWBackingPixel() {
        return CWBackingPixel;
    }
    private static final long CWOverrideRedirect = 512L;
    /**
     * {@snippet lang=c :
     * #define CWOverrideRedirect 512
     * }
     */
    public static long CWOverrideRedirect() {
        return CWOverrideRedirect;
    }
    private static final long CWSaveUnder = 1024L;
    /**
     * {@snippet lang=c :
     * #define CWSaveUnder 1024
     * }
     */
    public static long CWSaveUnder() {
        return CWSaveUnder;
    }
    private static final long CWEventMask = 2048L;
    /**
     * {@snippet lang=c :
     * #define CWEventMask 2048
     * }
     */
    public static long CWEventMask() {
        return CWEventMask;
    }
    private static final long CWDontPropagate = 4096L;
    /**
     * {@snippet lang=c :
     * #define CWDontPropagate 4096
     * }
     */
    public static long CWDontPropagate() {
        return CWDontPropagate;
    }
    private static final long CWColormap = 8192L;
    /**
     * {@snippet lang=c :
     * #define CWColormap 8192
     * }
     */
    public static long CWColormap() {
        return CWColormap;
    }
    private static final long CWCursor = 16384L;
    /**
     * {@snippet lang=c :
     * #define CWCursor 16384
     * }
     */
    public static long CWCursor() {
        return CWCursor;
    }
    private static final int CWX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CWX 1
     * }
     */
    public static int CWX() {
        return CWX;
    }
    private static final int CWY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CWY 2
     * }
     */
    public static int CWY() {
        return CWY;
    }
    private static final int CWWidth = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CWWidth 4
     * }
     */
    public static int CWWidth() {
        return CWWidth;
    }
    private static final int CWHeight = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CWHeight 8
     * }
     */
    public static int CWHeight() {
        return CWHeight;
    }
    private static final int CWBorderWidth = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CWBorderWidth 16
     * }
     */
    public static int CWBorderWidth() {
        return CWBorderWidth;
    }
    private static final int CWSibling = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CWSibling 32
     * }
     */
    public static int CWSibling() {
        return CWSibling;
    }
    private static final int CWStackMode = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CWStackMode 64
     * }
     */
    public static int CWStackMode() {
        return CWStackMode;
    }
    private static final long GCFunction = 1L;
    /**
     * {@snippet lang=c :
     * #define GCFunction 1
     * }
     */
    public static long GCFunction() {
        return GCFunction;
    }
    private static final long GCPlaneMask = 2L;
    /**
     * {@snippet lang=c :
     * #define GCPlaneMask 2
     * }
     */
    public static long GCPlaneMask() {
        return GCPlaneMask;
    }
    private static final long GCForeground = 4L;
    /**
     * {@snippet lang=c :
     * #define GCForeground 4
     * }
     */
    public static long GCForeground() {
        return GCForeground;
    }
    private static final long GCBackground = 8L;
    /**
     * {@snippet lang=c :
     * #define GCBackground 8
     * }
     */
    public static long GCBackground() {
        return GCBackground;
    }
    private static final long GCLineWidth = 16L;
    /**
     * {@snippet lang=c :
     * #define GCLineWidth 16
     * }
     */
    public static long GCLineWidth() {
        return GCLineWidth;
    }
    private static final long GCLineStyle = 32L;
    /**
     * {@snippet lang=c :
     * #define GCLineStyle 32
     * }
     */
    public static long GCLineStyle() {
        return GCLineStyle;
    }
    private static final long GCCapStyle = 64L;
    /**
     * {@snippet lang=c :
     * #define GCCapStyle 64
     * }
     */
    public static long GCCapStyle() {
        return GCCapStyle;
    }
    private static final long GCJoinStyle = 128L;
    /**
     * {@snippet lang=c :
     * #define GCJoinStyle 128
     * }
     */
    public static long GCJoinStyle() {
        return GCJoinStyle;
    }
    private static final long GCFillStyle = 256L;
    /**
     * {@snippet lang=c :
     * #define GCFillStyle 256
     * }
     */
    public static long GCFillStyle() {
        return GCFillStyle;
    }
    private static final long GCFillRule = 512L;
    /**
     * {@snippet lang=c :
     * #define GCFillRule 512
     * }
     */
    public static long GCFillRule() {
        return GCFillRule;
    }
    private static final long GCTile = 1024L;
    /**
     * {@snippet lang=c :
     * #define GCTile 1024
     * }
     */
    public static long GCTile() {
        return GCTile;
    }
    private static final long GCStipple = 2048L;
    /**
     * {@snippet lang=c :
     * #define GCStipple 2048
     * }
     */
    public static long GCStipple() {
        return GCStipple;
    }
    private static final long GCTileStipXOrigin = 4096L;
    /**
     * {@snippet lang=c :
     * #define GCTileStipXOrigin 4096
     * }
     */
    public static long GCTileStipXOrigin() {
        return GCTileStipXOrigin;
    }
    private static final long GCTileStipYOrigin = 8192L;
    /**
     * {@snippet lang=c :
     * #define GCTileStipYOrigin 8192
     * }
     */
    public static long GCTileStipYOrigin() {
        return GCTileStipYOrigin;
    }
    private static final long GCFont = 16384L;
    /**
     * {@snippet lang=c :
     * #define GCFont 16384
     * }
     */
    public static long GCFont() {
        return GCFont;
    }
    private static final long GCSubwindowMode = 32768L;
    /**
     * {@snippet lang=c :
     * #define GCSubwindowMode 32768
     * }
     */
    public static long GCSubwindowMode() {
        return GCSubwindowMode;
    }
    private static final long GCGraphicsExposures = 65536L;
    /**
     * {@snippet lang=c :
     * #define GCGraphicsExposures 65536
     * }
     */
    public static long GCGraphicsExposures() {
        return GCGraphicsExposures;
    }
    private static final long GCClipXOrigin = 131072L;
    /**
     * {@snippet lang=c :
     * #define GCClipXOrigin 131072
     * }
     */
    public static long GCClipXOrigin() {
        return GCClipXOrigin;
    }
    private static final long GCClipYOrigin = 262144L;
    /**
     * {@snippet lang=c :
     * #define GCClipYOrigin 262144
     * }
     */
    public static long GCClipYOrigin() {
        return GCClipYOrigin;
    }
    private static final long GCClipMask = 524288L;
    /**
     * {@snippet lang=c :
     * #define GCClipMask 524288
     * }
     */
    public static long GCClipMask() {
        return GCClipMask;
    }
    private static final long GCDashOffset = 1048576L;
    /**
     * {@snippet lang=c :
     * #define GCDashOffset 1048576
     * }
     */
    public static long GCDashOffset() {
        return GCDashOffset;
    }
    private static final long GCDashList = 2097152L;
    /**
     * {@snippet lang=c :
     * #define GCDashList 2097152
     * }
     */
    public static long GCDashList() {
        return GCDashList;
    }
    private static final long GCArcMode = 4194304L;
    /**
     * {@snippet lang=c :
     * #define GCArcMode 4194304
     * }
     */
    public static long GCArcMode() {
        return GCArcMode;
    }
    private static final int DoRed = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DoRed 1
     * }
     */
    public static int DoRed() {
        return DoRed;
    }
    private static final int DoGreen = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DoGreen 2
     * }
     */
    public static int DoGreen() {
        return DoGreen;
    }
    private static final int DoBlue = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DoBlue 4
     * }
     */
    public static int DoBlue() {
        return DoBlue;
    }
    private static final long KBKeyClickPercent = 1L;
    /**
     * {@snippet lang=c :
     * #define KBKeyClickPercent 1
     * }
     */
    public static long KBKeyClickPercent() {
        return KBKeyClickPercent;
    }
    private static final long KBBellPercent = 2L;
    /**
     * {@snippet lang=c :
     * #define KBBellPercent 2
     * }
     */
    public static long KBBellPercent() {
        return KBBellPercent;
    }
    private static final long KBBellPitch = 4L;
    /**
     * {@snippet lang=c :
     * #define KBBellPitch 4
     * }
     */
    public static long KBBellPitch() {
        return KBBellPitch;
    }
    private static final long KBBellDuration = 8L;
    /**
     * {@snippet lang=c :
     * #define KBBellDuration 8
     * }
     */
    public static long KBBellDuration() {
        return KBBellDuration;
    }
    private static final long KBLed = 16L;
    /**
     * {@snippet lang=c :
     * #define KBLed 16
     * }
     */
    public static long KBLed() {
        return KBLed;
    }
    private static final long KBLedMode = 32L;
    /**
     * {@snippet lang=c :
     * #define KBLedMode 32
     * }
     */
    public static long KBLedMode() {
        return KBLedMode;
    }
    private static final long KBKey = 64L;
    /**
     * {@snippet lang=c :
     * #define KBKey 64
     * }
     */
    public static long KBKey() {
        return KBKey;
    }
    private static final long KBAutoRepeatMode = 128L;
    /**
     * {@snippet lang=c :
     * #define KBAutoRepeatMode 128
     * }
     */
    public static long KBAutoRepeatMode() {
        return KBAutoRepeatMode;
    }
    private static final MemorySegment NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define NULL (void*) 0
     * }
     */
    public static MemorySegment NULL() {
        return NULL;
    }
    private static final long AllPlanes = -1L;
    /**
     * {@snippet lang=c :
     * #define AllPlanes -1
     * }
     */
    public static long AllPlanes() {
        return AllPlanes;
    }
    /**
     * {@snippet lang=c :
     * #define XNRequiredCharSet "requiredCharSet"
     * }
     */
    public static MemorySegment XNRequiredCharSet() {
        class Holder {
            static final MemorySegment XNRequiredCharSet
                = Xlib_h.LIBRARY_ARENA.allocateFrom("requiredCharSet");
        }
        return Holder.XNRequiredCharSet;
    }
    /**
     * {@snippet lang=c :
     * #define XNQueryOrientation "queryOrientation"
     * }
     */
    public static MemorySegment XNQueryOrientation() {
        class Holder {
            static final MemorySegment XNQueryOrientation
                = Xlib_h.LIBRARY_ARENA.allocateFrom("queryOrientation");
        }
        return Holder.XNQueryOrientation;
    }
    /**
     * {@snippet lang=c :
     * #define XNBaseFontName "baseFontName"
     * }
     */
    public static MemorySegment XNBaseFontName() {
        class Holder {
            static final MemorySegment XNBaseFontName
                = Xlib_h.LIBRARY_ARENA.allocateFrom("baseFontName");
        }
        return Holder.XNBaseFontName;
    }
    /**
     * {@snippet lang=c :
     * #define XNOMAutomatic "omAutomatic"
     * }
     */
    public static MemorySegment XNOMAutomatic() {
        class Holder {
            static final MemorySegment XNOMAutomatic
                = Xlib_h.LIBRARY_ARENA.allocateFrom("omAutomatic");
        }
        return Holder.XNOMAutomatic;
    }
    /**
     * {@snippet lang=c :
     * #define XNMissingCharSet "missingCharSet"
     * }
     */
    public static MemorySegment XNMissingCharSet() {
        class Holder {
            static final MemorySegment XNMissingCharSet
                = Xlib_h.LIBRARY_ARENA.allocateFrom("missingCharSet");
        }
        return Holder.XNMissingCharSet;
    }
    /**
     * {@snippet lang=c :
     * #define XNDefaultString "defaultString"
     * }
     */
    public static MemorySegment XNDefaultString() {
        class Holder {
            static final MemorySegment XNDefaultString
                = Xlib_h.LIBRARY_ARENA.allocateFrom("defaultString");
        }
        return Holder.XNDefaultString;
    }
    /**
     * {@snippet lang=c :
     * #define XNOrientation "orientation"
     * }
     */
    public static MemorySegment XNOrientation() {
        class Holder {
            static final MemorySegment XNOrientation
                = Xlib_h.LIBRARY_ARENA.allocateFrom("orientation");
        }
        return Holder.XNOrientation;
    }
    /**
     * {@snippet lang=c :
     * #define XNDirectionalDependentDrawing "directionalDependentDrawing"
     * }
     */
    public static MemorySegment XNDirectionalDependentDrawing() {
        class Holder {
            static final MemorySegment XNDirectionalDependentDrawing
                = Xlib_h.LIBRARY_ARENA.allocateFrom("directionalDependentDrawing");
        }
        return Holder.XNDirectionalDependentDrawing;
    }
    /**
     * {@snippet lang=c :
     * #define XNContextualDrawing "contextualDrawing"
     * }
     */
    public static MemorySegment XNContextualDrawing() {
        class Holder {
            static final MemorySegment XNContextualDrawing
                = Xlib_h.LIBRARY_ARENA.allocateFrom("contextualDrawing");
        }
        return Holder.XNContextualDrawing;
    }
    /**
     * {@snippet lang=c :
     * #define XNFontInfo "fontInfo"
     * }
     */
    public static MemorySegment XNFontInfo() {
        class Holder {
            static final MemorySegment XNFontInfo
                = Xlib_h.LIBRARY_ARENA.allocateFrom("fontInfo");
        }
        return Holder.XNFontInfo;
    }
    private static final long XIMPreeditArea = 1L;
    /**
     * {@snippet lang=c :
     * #define XIMPreeditArea 1
     * }
     */
    public static long XIMPreeditArea() {
        return XIMPreeditArea;
    }
    private static final long XIMPreeditCallbacks = 2L;
    /**
     * {@snippet lang=c :
     * #define XIMPreeditCallbacks 2
     * }
     */
    public static long XIMPreeditCallbacks() {
        return XIMPreeditCallbacks;
    }
    private static final long XIMPreeditPosition = 4L;
    /**
     * {@snippet lang=c :
     * #define XIMPreeditPosition 4
     * }
     */
    public static long XIMPreeditPosition() {
        return XIMPreeditPosition;
    }
    private static final long XIMPreeditNothing = 8L;
    /**
     * {@snippet lang=c :
     * #define XIMPreeditNothing 8
     * }
     */
    public static long XIMPreeditNothing() {
        return XIMPreeditNothing;
    }
    private static final long XIMPreeditNone = 16L;
    /**
     * {@snippet lang=c :
     * #define XIMPreeditNone 16
     * }
     */
    public static long XIMPreeditNone() {
        return XIMPreeditNone;
    }
    private static final long XIMStatusArea = 256L;
    /**
     * {@snippet lang=c :
     * #define XIMStatusArea 256
     * }
     */
    public static long XIMStatusArea() {
        return XIMStatusArea;
    }
    private static final long XIMStatusCallbacks = 512L;
    /**
     * {@snippet lang=c :
     * #define XIMStatusCallbacks 512
     * }
     */
    public static long XIMStatusCallbacks() {
        return XIMStatusCallbacks;
    }
    private static final long XIMStatusNothing = 1024L;
    /**
     * {@snippet lang=c :
     * #define XIMStatusNothing 1024
     * }
     */
    public static long XIMStatusNothing() {
        return XIMStatusNothing;
    }
    private static final long XIMStatusNone = 2048L;
    /**
     * {@snippet lang=c :
     * #define XIMStatusNone 2048
     * }
     */
    public static long XIMStatusNone() {
        return XIMStatusNone;
    }
    /**
     * {@snippet lang=c :
     * #define XNVaNestedList "XNVaNestedList"
     * }
     */
    public static MemorySegment XNVaNestedList() {
        class Holder {
            static final MemorySegment XNVaNestedList
                = Xlib_h.LIBRARY_ARENA.allocateFrom("XNVaNestedList");
        }
        return Holder.XNVaNestedList;
    }
    /**
     * {@snippet lang=c :
     * #define XNQueryInputStyle "queryInputStyle"
     * }
     */
    public static MemorySegment XNQueryInputStyle() {
        class Holder {
            static final MemorySegment XNQueryInputStyle
                = Xlib_h.LIBRARY_ARENA.allocateFrom("queryInputStyle");
        }
        return Holder.XNQueryInputStyle;
    }
    /**
     * {@snippet lang=c :
     * #define XNClientWindow "clientWindow"
     * }
     */
    public static MemorySegment XNClientWindow() {
        class Holder {
            static final MemorySegment XNClientWindow
                = Xlib_h.LIBRARY_ARENA.allocateFrom("clientWindow");
        }
        return Holder.XNClientWindow;
    }
    /**
     * {@snippet lang=c :
     * #define XNInputStyle "inputStyle"
     * }
     */
    public static MemorySegment XNInputStyle() {
        class Holder {
            static final MemorySegment XNInputStyle
                = Xlib_h.LIBRARY_ARENA.allocateFrom("inputStyle");
        }
        return Holder.XNInputStyle;
    }
    /**
     * {@snippet lang=c :
     * #define XNFocusWindow "focusWindow"
     * }
     */
    public static MemorySegment XNFocusWindow() {
        class Holder {
            static final MemorySegment XNFocusWindow
                = Xlib_h.LIBRARY_ARENA.allocateFrom("focusWindow");
        }
        return Holder.XNFocusWindow;
    }
    /**
     * {@snippet lang=c :
     * #define XNResourceName "resourceName"
     * }
     */
    public static MemorySegment XNResourceName() {
        class Holder {
            static final MemorySegment XNResourceName
                = Xlib_h.LIBRARY_ARENA.allocateFrom("resourceName");
        }
        return Holder.XNResourceName;
    }
    /**
     * {@snippet lang=c :
     * #define XNResourceClass "resourceClass"
     * }
     */
    public static MemorySegment XNResourceClass() {
        class Holder {
            static final MemorySegment XNResourceClass
                = Xlib_h.LIBRARY_ARENA.allocateFrom("resourceClass");
        }
        return Holder.XNResourceClass;
    }
    /**
     * {@snippet lang=c :
     * #define XNGeometryCallback "geometryCallback"
     * }
     */
    public static MemorySegment XNGeometryCallback() {
        class Holder {
            static final MemorySegment XNGeometryCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("geometryCallback");
        }
        return Holder.XNGeometryCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNDestroyCallback "destroyCallback"
     * }
     */
    public static MemorySegment XNDestroyCallback() {
        class Holder {
            static final MemorySegment XNDestroyCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("destroyCallback");
        }
        return Holder.XNDestroyCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNFilterEvents "filterEvents"
     * }
     */
    public static MemorySegment XNFilterEvents() {
        class Holder {
            static final MemorySegment XNFilterEvents
                = Xlib_h.LIBRARY_ARENA.allocateFrom("filterEvents");
        }
        return Holder.XNFilterEvents;
    }
    /**
     * {@snippet lang=c :
     * #define XNPreeditStartCallback "preeditStartCallback"
     * }
     */
    public static MemorySegment XNPreeditStartCallback() {
        class Holder {
            static final MemorySegment XNPreeditStartCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("preeditStartCallback");
        }
        return Holder.XNPreeditStartCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNPreeditDoneCallback "preeditDoneCallback"
     * }
     */
    public static MemorySegment XNPreeditDoneCallback() {
        class Holder {
            static final MemorySegment XNPreeditDoneCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("preeditDoneCallback");
        }
        return Holder.XNPreeditDoneCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNPreeditDrawCallback "preeditDrawCallback"
     * }
     */
    public static MemorySegment XNPreeditDrawCallback() {
        class Holder {
            static final MemorySegment XNPreeditDrawCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("preeditDrawCallback");
        }
        return Holder.XNPreeditDrawCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNPreeditCaretCallback "preeditCaretCallback"
     * }
     */
    public static MemorySegment XNPreeditCaretCallback() {
        class Holder {
            static final MemorySegment XNPreeditCaretCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("preeditCaretCallback");
        }
        return Holder.XNPreeditCaretCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNPreeditStateNotifyCallback "preeditStateNotifyCallback"
     * }
     */
    public static MemorySegment XNPreeditStateNotifyCallback() {
        class Holder {
            static final MemorySegment XNPreeditStateNotifyCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("preeditStateNotifyCallback");
        }
        return Holder.XNPreeditStateNotifyCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNPreeditAttributes "preeditAttributes"
     * }
     */
    public static MemorySegment XNPreeditAttributes() {
        class Holder {
            static final MemorySegment XNPreeditAttributes
                = Xlib_h.LIBRARY_ARENA.allocateFrom("preeditAttributes");
        }
        return Holder.XNPreeditAttributes;
    }
    /**
     * {@snippet lang=c :
     * #define XNStatusStartCallback "statusStartCallback"
     * }
     */
    public static MemorySegment XNStatusStartCallback() {
        class Holder {
            static final MemorySegment XNStatusStartCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("statusStartCallback");
        }
        return Holder.XNStatusStartCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNStatusDoneCallback "statusDoneCallback"
     * }
     */
    public static MemorySegment XNStatusDoneCallback() {
        class Holder {
            static final MemorySegment XNStatusDoneCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("statusDoneCallback");
        }
        return Holder.XNStatusDoneCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNStatusDrawCallback "statusDrawCallback"
     * }
     */
    public static MemorySegment XNStatusDrawCallback() {
        class Holder {
            static final MemorySegment XNStatusDrawCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("statusDrawCallback");
        }
        return Holder.XNStatusDrawCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNStatusAttributes "statusAttributes"
     * }
     */
    public static MemorySegment XNStatusAttributes() {
        class Holder {
            static final MemorySegment XNStatusAttributes
                = Xlib_h.LIBRARY_ARENA.allocateFrom("statusAttributes");
        }
        return Holder.XNStatusAttributes;
    }
    /**
     * {@snippet lang=c :
     * #define XNArea "area"
     * }
     */
    public static MemorySegment XNArea() {
        class Holder {
            static final MemorySegment XNArea
                = Xlib_h.LIBRARY_ARENA.allocateFrom("area");
        }
        return Holder.XNArea;
    }
    /**
     * {@snippet lang=c :
     * #define XNAreaNeeded "areaNeeded"
     * }
     */
    public static MemorySegment XNAreaNeeded() {
        class Holder {
            static final MemorySegment XNAreaNeeded
                = Xlib_h.LIBRARY_ARENA.allocateFrom("areaNeeded");
        }
        return Holder.XNAreaNeeded;
    }
    /**
     * {@snippet lang=c :
     * #define XNSpotLocation "spotLocation"
     * }
     */
    public static MemorySegment XNSpotLocation() {
        class Holder {
            static final MemorySegment XNSpotLocation
                = Xlib_h.LIBRARY_ARENA.allocateFrom("spotLocation");
        }
        return Holder.XNSpotLocation;
    }
    /**
     * {@snippet lang=c :
     * #define XNColormap "colorMap"
     * }
     */
    public static MemorySegment XNColormap() {
        class Holder {
            static final MemorySegment XNColormap
                = Xlib_h.LIBRARY_ARENA.allocateFrom("colorMap");
        }
        return Holder.XNColormap;
    }
    /**
     * {@snippet lang=c :
     * #define XNStdColormap "stdColorMap"
     * }
     */
    public static MemorySegment XNStdColormap() {
        class Holder {
            static final MemorySegment XNStdColormap
                = Xlib_h.LIBRARY_ARENA.allocateFrom("stdColorMap");
        }
        return Holder.XNStdColormap;
    }
    /**
     * {@snippet lang=c :
     * #define XNForeground "foreground"
     * }
     */
    public static MemorySegment XNForeground() {
        class Holder {
            static final MemorySegment XNForeground
                = Xlib_h.LIBRARY_ARENA.allocateFrom("foreground");
        }
        return Holder.XNForeground;
    }
    /**
     * {@snippet lang=c :
     * #define XNBackground "background"
     * }
     */
    public static MemorySegment XNBackground() {
        class Holder {
            static final MemorySegment XNBackground
                = Xlib_h.LIBRARY_ARENA.allocateFrom("background");
        }
        return Holder.XNBackground;
    }
    /**
     * {@snippet lang=c :
     * #define XNBackgroundPixmap "backgroundPixmap"
     * }
     */
    public static MemorySegment XNBackgroundPixmap() {
        class Holder {
            static final MemorySegment XNBackgroundPixmap
                = Xlib_h.LIBRARY_ARENA.allocateFrom("backgroundPixmap");
        }
        return Holder.XNBackgroundPixmap;
    }
    /**
     * {@snippet lang=c :
     * #define XNFontSet "fontSet"
     * }
     */
    public static MemorySegment XNFontSet() {
        class Holder {
            static final MemorySegment XNFontSet
                = Xlib_h.LIBRARY_ARENA.allocateFrom("fontSet");
        }
        return Holder.XNFontSet;
    }
    /**
     * {@snippet lang=c :
     * #define XNLineSpace "lineSpace"
     * }
     */
    public static MemorySegment XNLineSpace() {
        class Holder {
            static final MemorySegment XNLineSpace
                = Xlib_h.LIBRARY_ARENA.allocateFrom("lineSpace");
        }
        return Holder.XNLineSpace;
    }
    /**
     * {@snippet lang=c :
     * #define XNCursor "cursor"
     * }
     */
    public static MemorySegment XNCursor() {
        class Holder {
            static final MemorySegment XNCursor
                = Xlib_h.LIBRARY_ARENA.allocateFrom("cursor");
        }
        return Holder.XNCursor;
    }
    /**
     * {@snippet lang=c :
     * #define XNQueryIMValuesList "queryIMValuesList"
     * }
     */
    public static MemorySegment XNQueryIMValuesList() {
        class Holder {
            static final MemorySegment XNQueryIMValuesList
                = Xlib_h.LIBRARY_ARENA.allocateFrom("queryIMValuesList");
        }
        return Holder.XNQueryIMValuesList;
    }
    /**
     * {@snippet lang=c :
     * #define XNQueryICValuesList "queryICValuesList"
     * }
     */
    public static MemorySegment XNQueryICValuesList() {
        class Holder {
            static final MemorySegment XNQueryICValuesList
                = Xlib_h.LIBRARY_ARENA.allocateFrom("queryICValuesList");
        }
        return Holder.XNQueryICValuesList;
    }
    /**
     * {@snippet lang=c :
     * #define XNVisiblePosition "visiblePosition"
     * }
     */
    public static MemorySegment XNVisiblePosition() {
        class Holder {
            static final MemorySegment XNVisiblePosition
                = Xlib_h.LIBRARY_ARENA.allocateFrom("visiblePosition");
        }
        return Holder.XNVisiblePosition;
    }
    /**
     * {@snippet lang=c :
     * #define XNR6PreeditCallback "r6PreeditCallback"
     * }
     */
    public static MemorySegment XNR6PreeditCallback() {
        class Holder {
            static final MemorySegment XNR6PreeditCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("r6PreeditCallback");
        }
        return Holder.XNR6PreeditCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNStringConversionCallback "stringConversionCallback"
     * }
     */
    public static MemorySegment XNStringConversionCallback() {
        class Holder {
            static final MemorySegment XNStringConversionCallback
                = Xlib_h.LIBRARY_ARENA.allocateFrom("stringConversionCallback");
        }
        return Holder.XNStringConversionCallback;
    }
    /**
     * {@snippet lang=c :
     * #define XNStringConversion "stringConversion"
     * }
     */
    public static MemorySegment XNStringConversion() {
        class Holder {
            static final MemorySegment XNStringConversion
                = Xlib_h.LIBRARY_ARENA.allocateFrom("stringConversion");
        }
        return Holder.XNStringConversion;
    }
    /**
     * {@snippet lang=c :
     * #define XNResetState "resetState"
     * }
     */
    public static MemorySegment XNResetState() {
        class Holder {
            static final MemorySegment XNResetState
                = Xlib_h.LIBRARY_ARENA.allocateFrom("resetState");
        }
        return Holder.XNResetState;
    }
    /**
     * {@snippet lang=c :
     * #define XNHotKey "hotKey"
     * }
     */
    public static MemorySegment XNHotKey() {
        class Holder {
            static final MemorySegment XNHotKey
                = Xlib_h.LIBRARY_ARENA.allocateFrom("hotKey");
        }
        return Holder.XNHotKey;
    }
    /**
     * {@snippet lang=c :
     * #define XNHotKeyState "hotKeyState"
     * }
     */
    public static MemorySegment XNHotKeyState() {
        class Holder {
            static final MemorySegment XNHotKeyState
                = Xlib_h.LIBRARY_ARENA.allocateFrom("hotKeyState");
        }
        return Holder.XNHotKeyState;
    }
    /**
     * {@snippet lang=c :
     * #define XNPreeditState "preeditState"
     * }
     */
    public static MemorySegment XNPreeditState() {
        class Holder {
            static final MemorySegment XNPreeditState
                = Xlib_h.LIBRARY_ARENA.allocateFrom("preeditState");
        }
        return Holder.XNPreeditState;
    }
    /**
     * {@snippet lang=c :
     * #define XNSeparatorofNestedList "separatorofNestedList"
     * }
     */
    public static MemorySegment XNSeparatorofNestedList() {
        class Holder {
            static final MemorySegment XNSeparatorofNestedList
                = Xlib_h.LIBRARY_ARENA.allocateFrom("separatorofNestedList");
        }
        return Holder.XNSeparatorofNestedList;
    }
    private static final int XBufferOverflow = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define XBufferOverflow -1
     * }
     */
    public static int XBufferOverflow() {
        return XBufferOverflow;
    }
    private static final long XIMReverse = 1L;
    /**
     * {@snippet lang=c :
     * #define XIMReverse 1
     * }
     */
    public static long XIMReverse() {
        return XIMReverse;
    }
    private static final long XIMUnderline = 2L;
    /**
     * {@snippet lang=c :
     * #define XIMUnderline 2
     * }
     */
    public static long XIMUnderline() {
        return XIMUnderline;
    }
    private static final long XIMHighlight = 4L;
    /**
     * {@snippet lang=c :
     * #define XIMHighlight 4
     * }
     */
    public static long XIMHighlight() {
        return XIMHighlight;
    }
    private static final long XIMPrimary = 32L;
    /**
     * {@snippet lang=c :
     * #define XIMPrimary 32
     * }
     */
    public static long XIMPrimary() {
        return XIMPrimary;
    }
    private static final long XIMSecondary = 64L;
    /**
     * {@snippet lang=c :
     * #define XIMSecondary 64
     * }
     */
    public static long XIMSecondary() {
        return XIMSecondary;
    }
    private static final long XIMTertiary = 128L;
    /**
     * {@snippet lang=c :
     * #define XIMTertiary 128
     * }
     */
    public static long XIMTertiary() {
        return XIMTertiary;
    }
    private static final long XIMVisibleToForward = 256L;
    /**
     * {@snippet lang=c :
     * #define XIMVisibleToForward 256
     * }
     */
    public static long XIMVisibleToForward() {
        return XIMVisibleToForward;
    }
    private static final long XIMVisibleToBackword = 512L;
    /**
     * {@snippet lang=c :
     * #define XIMVisibleToBackword 512
     * }
     */
    public static long XIMVisibleToBackword() {
        return XIMVisibleToBackword;
    }
    private static final long XIMVisibleToCenter = 1024L;
    /**
     * {@snippet lang=c :
     * #define XIMVisibleToCenter 1024
     * }
     */
    public static long XIMVisibleToCenter() {
        return XIMVisibleToCenter;
    }
    private static final long XIMPreeditUnKnown = 0L;
    /**
     * {@snippet lang=c :
     * #define XIMPreeditUnKnown 0
     * }
     */
    public static long XIMPreeditUnKnown() {
        return XIMPreeditUnKnown;
    }
    private static final long XIMPreeditEnable = 1L;
    /**
     * {@snippet lang=c :
     * #define XIMPreeditEnable 1
     * }
     */
    public static long XIMPreeditEnable() {
        return XIMPreeditEnable;
    }
    private static final long XIMPreeditDisable = 2L;
    /**
     * {@snippet lang=c :
     * #define XIMPreeditDisable 2
     * }
     */
    public static long XIMPreeditDisable() {
        return XIMPreeditDisable;
    }
    private static final long XIMInitialState = 1L;
    /**
     * {@snippet lang=c :
     * #define XIMInitialState 1
     * }
     */
    public static long XIMInitialState() {
        return XIMInitialState;
    }
    private static final long XIMPreserveState = 2L;
    /**
     * {@snippet lang=c :
     * #define XIMPreserveState 2
     * }
     */
    public static long XIMPreserveState() {
        return XIMPreserveState;
    }
    private static final int XIMStringConversionLeftEdge = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionLeftEdge 1
     * }
     */
    public static int XIMStringConversionLeftEdge() {
        return XIMStringConversionLeftEdge;
    }
    private static final int XIMStringConversionRightEdge = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionRightEdge 2
     * }
     */
    public static int XIMStringConversionRightEdge() {
        return XIMStringConversionRightEdge;
    }
    private static final int XIMStringConversionTopEdge = (int)4L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionTopEdge 4
     * }
     */
    public static int XIMStringConversionTopEdge() {
        return XIMStringConversionTopEdge;
    }
    private static final int XIMStringConversionBottomEdge = (int)8L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionBottomEdge 8
     * }
     */
    public static int XIMStringConversionBottomEdge() {
        return XIMStringConversionBottomEdge;
    }
    private static final int XIMStringConversionConcealed = (int)16L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionConcealed 16
     * }
     */
    public static int XIMStringConversionConcealed() {
        return XIMStringConversionConcealed;
    }
    private static final int XIMStringConversionWrapped = (int)32L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionWrapped 32
     * }
     */
    public static int XIMStringConversionWrapped() {
        return XIMStringConversionWrapped;
    }
    private static final int XIMStringConversionBuffer = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionBuffer 1
     * }
     */
    public static int XIMStringConversionBuffer() {
        return XIMStringConversionBuffer;
    }
    private static final int XIMStringConversionLine = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionLine 2
     * }
     */
    public static int XIMStringConversionLine() {
        return XIMStringConversionLine;
    }
    private static final int XIMStringConversionWord = (int)3L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionWord 3
     * }
     */
    public static int XIMStringConversionWord() {
        return XIMStringConversionWord;
    }
    private static final int XIMStringConversionChar = (int)4L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionChar 4
     * }
     */
    public static int XIMStringConversionChar() {
        return XIMStringConversionChar;
    }
    private static final int XIMStringConversionSubstitution = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionSubstitution 1
     * }
     */
    public static int XIMStringConversionSubstitution() {
        return XIMStringConversionSubstitution;
    }
    private static final int XIMStringConversionRetrieval = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XIMStringConversionRetrieval 2
     * }
     */
    public static int XIMStringConversionRetrieval() {
        return XIMStringConversionRetrieval;
    }
    private static final long XIMHotKeyStateON = 1L;
    /**
     * {@snippet lang=c :
     * #define XIMHotKeyStateON 1
     * }
     */
    public static long XIMHotKeyStateON() {
        return XIMHotKeyStateON;
    }
    private static final long XIMHotKeyStateOFF = 2L;
    /**
     * {@snippet lang=c :
     * #define XIMHotKeyStateOFF 2
     * }
     */
    public static long XIMHotKeyStateOFF() {
        return XIMHotKeyStateOFF;
    }
    private static final long USPosition = 1L;
    /**
     * {@snippet lang=c :
     * #define USPosition 1
     * }
     */
    public static long USPosition() {
        return USPosition;
    }
    private static final long USSize = 2L;
    /**
     * {@snippet lang=c :
     * #define USSize 2
     * }
     */
    public static long USSize() {
        return USSize;
    }
    private static final long PPosition = 4L;
    /**
     * {@snippet lang=c :
     * #define PPosition 4
     * }
     */
    public static long PPosition() {
        return PPosition;
    }
    private static final long PSize = 8L;
    /**
     * {@snippet lang=c :
     * #define PSize 8
     * }
     */
    public static long PSize() {
        return PSize;
    }
    private static final long PMinSize = 16L;
    /**
     * {@snippet lang=c :
     * #define PMinSize 16
     * }
     */
    public static long PMinSize() {
        return PMinSize;
    }
    private static final long PMaxSize = 32L;
    /**
     * {@snippet lang=c :
     * #define PMaxSize 32
     * }
     */
    public static long PMaxSize() {
        return PMaxSize;
    }
    private static final long PResizeInc = 64L;
    /**
     * {@snippet lang=c :
     * #define PResizeInc 64
     * }
     */
    public static long PResizeInc() {
        return PResizeInc;
    }
    private static final long PAspect = 128L;
    /**
     * {@snippet lang=c :
     * #define PAspect 128
     * }
     */
    public static long PAspect() {
        return PAspect;
    }
    private static final long PBaseSize = 256L;
    /**
     * {@snippet lang=c :
     * #define PBaseSize 256
     * }
     */
    public static long PBaseSize() {
        return PBaseSize;
    }
    private static final long PWinGravity = 512L;
    /**
     * {@snippet lang=c :
     * #define PWinGravity 512
     * }
     */
    public static long PWinGravity() {
        return PWinGravity;
    }
    private static final long PAllHints = 252L;
    /**
     * {@snippet lang=c :
     * #define PAllHints 252
     * }
     */
    public static long PAllHints() {
        return PAllHints;
    }
    private static final long InputHint = 1L;
    /**
     * {@snippet lang=c :
     * #define InputHint 1
     * }
     */
    public static long InputHint() {
        return InputHint;
    }
    private static final long StateHint = 2L;
    /**
     * {@snippet lang=c :
     * #define StateHint 2
     * }
     */
    public static long StateHint() {
        return StateHint;
    }
    private static final long IconPixmapHint = 4L;
    /**
     * {@snippet lang=c :
     * #define IconPixmapHint 4
     * }
     */
    public static long IconPixmapHint() {
        return IconPixmapHint;
    }
    private static final long IconWindowHint = 8L;
    /**
     * {@snippet lang=c :
     * #define IconWindowHint 8
     * }
     */
    public static long IconWindowHint() {
        return IconWindowHint;
    }
    private static final long IconPositionHint = 16L;
    /**
     * {@snippet lang=c :
     * #define IconPositionHint 16
     * }
     */
    public static long IconPositionHint() {
        return IconPositionHint;
    }
    private static final long IconMaskHint = 32L;
    /**
     * {@snippet lang=c :
     * #define IconMaskHint 32
     * }
     */
    public static long IconMaskHint() {
        return IconMaskHint;
    }
    private static final long WindowGroupHint = 64L;
    /**
     * {@snippet lang=c :
     * #define WindowGroupHint 64
     * }
     */
    public static long WindowGroupHint() {
        return WindowGroupHint;
    }
    private static final long AllHints = 127L;
    /**
     * {@snippet lang=c :
     * #define AllHints 127
     * }
     */
    public static long AllHints() {
        return AllHints;
    }
    private static final long XUrgencyHint = 256L;
    /**
     * {@snippet lang=c :
     * #define XUrgencyHint 256
     * }
     */
    public static long XUrgencyHint() {
        return XUrgencyHint;
    }
    private static final int XNoMemory = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define XNoMemory -1
     * }
     */
    public static int XNoMemory() {
        return XNoMemory;
    }
    private static final int XLocaleNotSupported = (int)-2L;
    /**
     * {@snippet lang=c :
     * #define XLocaleNotSupported -2
     * }
     */
    public static int XLocaleNotSupported() {
        return XLocaleNotSupported;
    }
    private static final int XConverterNotFound = (int)-3L;
    /**
     * {@snippet lang=c :
     * #define XConverterNotFound -3
     * }
     */
    public static int XConverterNotFound() {
        return XConverterNotFound;
    }
    private static final long ReleaseByFreeingColormap = 1L;
    /**
     * {@snippet lang=c :
     * #define ReleaseByFreeingColormap 1
     * }
     */
    public static long ReleaseByFreeingColormap() {
        return ReleaseByFreeingColormap;
    }
}

