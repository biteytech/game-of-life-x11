// Generated by jextract

package tech.bitey.golpanama.xlib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     XExtData* ext_data;
 *     Font fid;
 *     unsigned int direction;
 *     unsigned int min_char_or_byte2;
 *     unsigned int max_char_or_byte2;
 *     unsigned int min_byte1;
 *     unsigned int max_byte1;
 *     int all_chars_exist;
 *     unsigned int default_char;
 *     int n_properties;
 *     XFontProp* properties;
 *     XCharStruct min_bounds;
 *     XCharStruct max_bounds;
 *     XCharStruct* per_char;
 *     int ascent;
 *     int descent;
 * };
 * }
 */
public class XFontStruct {

    public static MemoryLayout $LAYOUT() {
        return constants$105.const$2;
    }
    public static VarHandle ext_data$VH() {
        return constants$105.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * XExtData* ext_data;
     * }
     */
    public static MemorySegment ext_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$105.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * XExtData* ext_data;
     * }
     */
    public static void ext_data$set(MemorySegment seg, MemorySegment x) {
        constants$105.const$3.set(seg, x);
    }
    public static MemorySegment ext_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$105.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ext_data$set(MemorySegment seg, long index, MemorySegment x) {
        constants$105.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fid$VH() {
        return constants$105.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * Font fid;
     * }
     */
    public static long fid$get(MemorySegment seg) {
        return (long)constants$105.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * Font fid;
     * }
     */
    public static void fid$set(MemorySegment seg, long x) {
        constants$105.const$4.set(seg, x);
    }
    public static long fid$get(MemorySegment seg, long index) {
        return (long)constants$105.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void fid$set(MemorySegment seg, long index, long x) {
        constants$105.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle direction$VH() {
        return constants$105.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int direction;
     * }
     */
    public static int direction$get(MemorySegment seg) {
        return (int)constants$105.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int direction;
     * }
     */
    public static void direction$set(MemorySegment seg, int x) {
        constants$105.const$5.set(seg, x);
    }
    public static int direction$get(MemorySegment seg, long index) {
        return (int)constants$105.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void direction$set(MemorySegment seg, long index, int x) {
        constants$105.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle min_char_or_byte2$VH() {
        return constants$106.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int min_char_or_byte2;
     * }
     */
    public static int min_char_or_byte2$get(MemorySegment seg) {
        return (int)constants$106.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int min_char_or_byte2;
     * }
     */
    public static void min_char_or_byte2$set(MemorySegment seg, int x) {
        constants$106.const$0.set(seg, x);
    }
    public static int min_char_or_byte2$get(MemorySegment seg, long index) {
        return (int)constants$106.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void min_char_or_byte2$set(MemorySegment seg, long index, int x) {
        constants$106.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_char_or_byte2$VH() {
        return constants$106.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int max_char_or_byte2;
     * }
     */
    public static int max_char_or_byte2$get(MemorySegment seg) {
        return (int)constants$106.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int max_char_or_byte2;
     * }
     */
    public static void max_char_or_byte2$set(MemorySegment seg, int x) {
        constants$106.const$1.set(seg, x);
    }
    public static int max_char_or_byte2$get(MemorySegment seg, long index) {
        return (int)constants$106.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void max_char_or_byte2$set(MemorySegment seg, long index, int x) {
        constants$106.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle min_byte1$VH() {
        return constants$106.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int min_byte1;
     * }
     */
    public static int min_byte1$get(MemorySegment seg) {
        return (int)constants$106.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int min_byte1;
     * }
     */
    public static void min_byte1$set(MemorySegment seg, int x) {
        constants$106.const$2.set(seg, x);
    }
    public static int min_byte1$get(MemorySegment seg, long index) {
        return (int)constants$106.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void min_byte1$set(MemorySegment seg, long index, int x) {
        constants$106.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_byte1$VH() {
        return constants$106.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int max_byte1;
     * }
     */
    public static int max_byte1$get(MemorySegment seg) {
        return (int)constants$106.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int max_byte1;
     * }
     */
    public static void max_byte1$set(MemorySegment seg, int x) {
        constants$106.const$3.set(seg, x);
    }
    public static int max_byte1$get(MemorySegment seg, long index) {
        return (int)constants$106.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void max_byte1$set(MemorySegment seg, long index, int x) {
        constants$106.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle all_chars_exist$VH() {
        return constants$106.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int all_chars_exist;
     * }
     */
    public static int all_chars_exist$get(MemorySegment seg) {
        return (int)constants$106.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int all_chars_exist;
     * }
     */
    public static void all_chars_exist$set(MemorySegment seg, int x) {
        constants$106.const$4.set(seg, x);
    }
    public static int all_chars_exist$get(MemorySegment seg, long index) {
        return (int)constants$106.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void all_chars_exist$set(MemorySegment seg, long index, int x) {
        constants$106.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle default_char$VH() {
        return constants$106.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int default_char;
     * }
     */
    public static int default_char$get(MemorySegment seg) {
        return (int)constants$106.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int default_char;
     * }
     */
    public static void default_char$set(MemorySegment seg, int x) {
        constants$106.const$5.set(seg, x);
    }
    public static int default_char$get(MemorySegment seg, long index) {
        return (int)constants$106.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void default_char$set(MemorySegment seg, long index, int x) {
        constants$106.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle n_properties$VH() {
        return constants$107.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int n_properties;
     * }
     */
    public static int n_properties$get(MemorySegment seg) {
        return (int)constants$107.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int n_properties;
     * }
     */
    public static void n_properties$set(MemorySegment seg, int x) {
        constants$107.const$0.set(seg, x);
    }
    public static int n_properties$get(MemorySegment seg, long index) {
        return (int)constants$107.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void n_properties$set(MemorySegment seg, long index, int x) {
        constants$107.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle properties$VH() {
        return constants$107.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * XFontProp* properties;
     * }
     */
    public static MemorySegment properties$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$107.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * XFontProp* properties;
     * }
     */
    public static void properties$set(MemorySegment seg, MemorySegment x) {
        constants$107.const$1.set(seg, x);
    }
    public static MemorySegment properties$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$107.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void properties$set(MemorySegment seg, long index, MemorySegment x) {
        constants$107.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment min_bounds$slice(MemorySegment seg) {
        return seg.asSlice(56, 12);
    }
    public static MemorySegment max_bounds$slice(MemorySegment seg) {
        return seg.asSlice(68, 12);
    }
    public static VarHandle per_char$VH() {
        return constants$107.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * XCharStruct* per_char;
     * }
     */
    public static MemorySegment per_char$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$107.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * XCharStruct* per_char;
     * }
     */
    public static void per_char$set(MemorySegment seg, MemorySegment x) {
        constants$107.const$2.set(seg, x);
    }
    public static MemorySegment per_char$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$107.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void per_char$set(MemorySegment seg, long index, MemorySegment x) {
        constants$107.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ascent$VH() {
        return constants$107.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int ascent;
     * }
     */
    public static int ascent$get(MemorySegment seg) {
        return (int)constants$107.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int ascent;
     * }
     */
    public static void ascent$set(MemorySegment seg, int x) {
        constants$107.const$3.set(seg, x);
    }
    public static int ascent$get(MemorySegment seg, long index) {
        return (int)constants$107.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ascent$set(MemorySegment seg, long index, int x) {
        constants$107.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle descent$VH() {
        return constants$107.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int descent;
     * }
     */
    public static int descent$get(MemorySegment seg) {
        return (int)constants$107.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int descent;
     * }
     */
    public static void descent$set(MemorySegment seg, int x) {
        constants$107.const$4.set(seg, x);
    }
    public static int descent$get(MemorySegment seg, long index) {
        return (int)constants$107.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void descent$set(MemorySegment seg, long index, int x) {
        constants$107.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


